import json
from pymongo import (
    IndexModel,
    ASCENDING as PYMONGOASCENDING,
    DESCENDING as PYMONGODESCENDING,
)
from typing import Union, Optional, Literal, List
from beanie import Indexed
from pydantic import validator
from datetime import datetime, timezone

from datastore.models.base import BaseDocument, PaginationParams


class Vulnerability(BaseDocument):
    """
    Model Class for User Inputed Vulnerability
    """

    # Vulnerabilies are sorted by last modified date, we need to index it.
    updated_at: Indexed(datetime) = datetime.now(timezone.utc)

    title: Indexed(str)
    impact: str = ""
    abstract: str = ""
    references: list = []
    remediation_recommendation: str = ""
    replication_effort: Literal["COMPLEX", "EASY", "MEDIUM"] = "COMPLEX"
    severity: Literal["LOW", "MEDIUM", "HIGH", "CRITICAL"] = "LOW"
    remediation_effort: Literal["LOW", "MEDIUM", "HIGH", "CRITICAL"] = "LOW"
    created_by: str = ""
    updated_by: str = ""
    type: Literal["WEB", "INFRA", "MOBILE", "GENERAL"] = "GENERAL"

    def __str__(self):
        return f"<Vulnerability {self.title}>"

    def __repr__(self):
        return f"<Vulnerability {self.title}>"

    class Settings:
        name = "vulnerabilities"
        indexes = [
            IndexModel(
                [("type", PYMONGOASCENDING)],
                name="type_asc",
                unique=False,
            ),
            IndexModel(
                [("replication_effort", PYMONGOASCENDING)],
                name="replication_effort_asc",
                unique=False,
            ),
            IndexModel(
                [("severity", PYMONGOASCENDING)],
                name="severity_asc",
                unique=False,
            ),
            IndexModel(
                [("remediation_effort", PYMONGOASCENDING)],
                name="remediation_effort_asc",
                unique=False,
            ),
            IndexModel(
                [
                    ("updated_at", PYMONGODESCENDING),
                    ("severity", PYMONGODESCENDING),
                    ("title", PYMONGOASCENDING),
                ],
                name="updated_at_title_index_desc_asc",
                unique=False,
            ),
            IndexModel(
                [("updated_at", PYMONGODESCENDING), ("severity", PYMONGOASCENDING)],
                name="updated_at_severity_index_desc_asc",
                unique=False,
            ),
        ]


class VulnerabilityRequestSearch(PaginationParams):
    search: Union[str, None] = None
    title: Union[str, None] = None
    severity: Union[str, None] = None
    replication_effort: Union[str, None] = None
    remediation_effort: Union[str, None] = None


class VulnerabilityRequest(PaginationParams):
    to_save: List[Vulnerability] = []
    to_update: List[Vulnerability] = []
    to_delete: List[Vulnerability] = []
